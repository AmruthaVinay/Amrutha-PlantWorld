spring.main.banner-mode=off
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/sapp?createDatabaseIfNotExist=true

#spring.datasource.url=jdbc:mysql://localhost/Test_DB
#spring.datasource.url = jdbc:mysql://localhost/test
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driver-class-name= com.mysql.jdbc.Driver

#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#use for testing
#spring.jpa.hibernate.ddl-auto=update

spring.jpa.hibernate.ddl-auto=create-drop

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialec


management.endpoints.web.exposure.include=*


server.port= 8080
server.error.include-stacktrace=always
server.error.include-message= always
server.error.include-exception= true
server.error.include-binding-errors=always

spring.h2.console.enabled=true







